{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","mount_file_id":"1eVyfmzCharPWvYmGZ4IjkRVaLYjcE-kE","authorship_tag":"ABX9TyMHP5BEFw1VrTqWpUsNoEWu"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["**Name:** Tarun Kumar Reddy </br>\n","**School:** Computing and Data Science </br>\n","**Email Address:** tarun.g-25@scds.saiuniversity.edu.in"],"metadata":{"id":"tmC-FDp3jwwy"}},{"cell_type":"markdown","source":["## Importing Libraries"],"metadata":{"id":"HjxeLoCKcUob"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"tIyvEuH-vBSo","executionInfo":{"status":"ok","timestamp":1703783888211,"user_tz":-330,"elapsed":2376,"user":{"displayName":"Tarun Kumar Reddy","userId":"06186965699569836560"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"eac84455-950f-4b6d-8b1e-d1716131e319"},"outputs":[{"output_type":"stream","name":"stdout","text":["2.15.0\n"]}],"source":["import tensorflow as tf\n","print(tf.__version__)\n","\n","from tensorflow import keras\n","tf.random.set_seed(42)\n","\n","import numpy as np\n","np.random.seed(42)\n","\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","import glob\n","import PIL\n","from PIL import Image"]},{"cell_type":"markdown","source":["## Loading the Data\n","Loading pre-processed data from the GDrive"],"metadata":{"id":"WFWEUs9JcaOQ"}},{"cell_type":"code","source":["from numpy import load\n","\n","X_train_std = load('/content/drive/MyDrive/Deep_Learning_Final_Project/X_train_std.npy')\n","X_test_std = load('/content/drive/MyDrive/Deep_Learning_Final_Project/X_test_std.npy')\n","y_train = load('/content/drive/MyDrive/Deep_Learning_Final_Project/y_train.npy')\n","y_test = load('/content/drive/MyDrive/Deep_Learning_Final_Project/y_test.npy')"],"metadata":{"id":"tNYk6pjVsERD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(\"X_train_std_shape: {}\".format(X_train_std.shape))\n","print(\"X_test_std_shape: {}\".format(X_test_std.shape))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VAgjzNvYEOGS","executionInfo":{"status":"ok","timestamp":1703772865241,"user_tz":-330,"elapsed":40,"user":{"displayName":"Tarun Kumar Reddy","userId":"06186965699569836560"}},"outputId":"ebb24a37-6af3-4eaf-d73a-a53c9b5b2a5a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["X_train_std_shape: (378, 299, 299, 3)\n","X_test_std_shape: (127, 299, 299, 3)\n"]}]},{"cell_type":"markdown","source":["## Constructing the Neural Network"],"metadata":{"id":"gIfu4qwJczwn"}},{"cell_type":"code","source":["# Load the saved best model\n","from keras import layers\n","\n","class LayerScale(layers.Layer):\n","    def __init__(self, init_values, projection_dim, **kwargs):\n","        super().__init__(**kwargs)\n","        self.init_values = init_values\n","        self.projection_dim = projection_dim\n","\n","    def build(self, input_shape):\n","        self.gamma = tf.Variable(\n","            self.init_values * tf.ones((self.projection_dim,))\n","        )\n","\n","    def call(self, x):\n","        return x * self.gamma\n","\n","    def get_config(self):\n","        config = super().get_config()\n","        config.update(\n","            {\n","                \"init_values\": self.init_values,\n","                \"projection_dim\": self.projection_dim,\n","            }\n","        )\n","        return config\n","\n","model3_FT = keras.models.load_model(\"/content/drive/MyDrive/Deep_Learning_Final_Project/model3_TL.h5\", custom_objects={\"LayerScale\": LayerScale} )\n","model3_FT.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tU13AitTd6EV","executionInfo":{"status":"ok","timestamp":1703772874884,"user_tz":-330,"elapsed":9675,"user":{"displayName":"Tarun Kumar Reddy","userId":"06186965699569836560"}},"outputId":"65309c65-464b-45de-a0ee-c4153117f368"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model\"\n","__________________________________________________________________________________________________\n"," Layer (type)                Output Shape                 Param #   Connected to                  \n","==================================================================================================\n"," input_1 (InputLayer)        [(None, None, None, 3)]      0         []                            \n","                                                                                                  \n"," convnext_tiny_prestem_norm  (None, None, None, 3)        0         ['input_1[0][0]']             \n"," alization (Normalization)                                                                        \n","                                                                                                  \n"," convnext_tiny_stem (Sequen  (None, None, None, 96)       4896      ['convnext_tiny_prestem_normal\n"," tial)                                                              ization[0][0]']               \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 96)       4800      ['convnext_tiny_stem[0][0]']  \n"," k_0_depthwise_conv (Conv2D                                                                       \n"," )                                                                                                \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 96)       192       ['convnext_tiny_stage_0_block_\n"," k_0_layernorm (LayerNormal                                         0_depthwise_conv[0][0]']      \n"," ization)                                                                                         \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 384)      37248     ['convnext_tiny_stage_0_block_\n"," k_0_pointwise_conv_1 (Dens                                         0_layernorm[0][0]']           \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 384)      0         ['convnext_tiny_stage_0_block_\n"," k_0_gelu (Activation)                                              0_pointwise_conv_1[0][0]']    \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 96)       36960     ['convnext_tiny_stage_0_block_\n"," k_0_pointwise_conv_2 (Dens                                         0_gelu[0][0]']                \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 96)       96        ['convnext_tiny_stage_0_block_\n"," k_0_layer_scale (LayerScal                                         0_pointwise_conv_2[0][0]']    \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 96)       0         ['convnext_tiny_stage_0_block_\n"," k_0_identity (Activation)                                          0_layer_scale[0][0]']         \n","                                                                                                  \n"," tf.__operators__.add (TFOp  (None, None, None, 96)       0         ['convnext_tiny_stem[0][0]',  \n"," Lambda)                                                             'convnext_tiny_stage_0_block_\n","                                                                    0_identity[0][0]']            \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 96)       4800      ['tf.__operators__.add[0][0]']\n"," k_1_depthwise_conv (Conv2D                                                                       \n"," )                                                                                                \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 96)       192       ['convnext_tiny_stage_0_block_\n"," k_1_layernorm (LayerNormal                                         1_depthwise_conv[0][0]']      \n"," ization)                                                                                         \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 384)      37248     ['convnext_tiny_stage_0_block_\n"," k_1_pointwise_conv_1 (Dens                                         1_layernorm[0][0]']           \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 384)      0         ['convnext_tiny_stage_0_block_\n"," k_1_gelu (Activation)                                              1_pointwise_conv_1[0][0]']    \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 96)       36960     ['convnext_tiny_stage_0_block_\n"," k_1_pointwise_conv_2 (Dens                                         1_gelu[0][0]']                \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 96)       96        ['convnext_tiny_stage_0_block_\n"," k_1_layer_scale (LayerScal                                         1_pointwise_conv_2[0][0]']    \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 96)       0         ['convnext_tiny_stage_0_block_\n"," k_1_identity (Activation)                                          1_layer_scale[0][0]']         \n","                                                                                                  \n"," tf.__operators__.add_1 (TF  (None, None, None, 96)       0         ['tf.__operators__.add[0][0]',\n"," OpLambda)                                                           'convnext_tiny_stage_0_block_\n","                                                                    1_identity[0][0]']            \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 96)       4800      ['tf.__operators__.add_1[0][0]\n"," k_2_depthwise_conv (Conv2D                                         ']                            \n"," )                                                                                                \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 96)       192       ['convnext_tiny_stage_0_block_\n"," k_2_layernorm (LayerNormal                                         2_depthwise_conv[0][0]']      \n"," ization)                                                                                         \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 384)      37248     ['convnext_tiny_stage_0_block_\n"," k_2_pointwise_conv_1 (Dens                                         2_layernorm[0][0]']           \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 384)      0         ['convnext_tiny_stage_0_block_\n"," k_2_gelu (Activation)                                              2_pointwise_conv_1[0][0]']    \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 96)       36960     ['convnext_tiny_stage_0_block_\n"," k_2_pointwise_conv_2 (Dens                                         2_gelu[0][0]']                \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 96)       96        ['convnext_tiny_stage_0_block_\n"," k_2_layer_scale (LayerScal                                         2_pointwise_conv_2[0][0]']    \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_0_bloc  (None, None, None, 96)       0         ['convnext_tiny_stage_0_block_\n"," k_2_identity (Activation)                                          2_layer_scale[0][0]']         \n","                                                                                                  \n"," tf.__operators__.add_2 (TF  (None, None, None, 96)       0         ['tf.__operators__.add_1[0][0]\n"," OpLambda)                                                          ',                            \n","                                                                     'convnext_tiny_stage_0_block_\n","                                                                    2_identity[0][0]']            \n","                                                                                                  \n"," convnext_tiny_downsampling  (None, None, None, 192)      74112     ['tf.__operators__.add_2[0][0]\n"," _block_0 (Sequential)                                              ']                            \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 192)      9600      ['convnext_tiny_downsampling_b\n"," k_0_depthwise_conv (Conv2D                                         lock_0[0][0]']                \n"," )                                                                                                \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 192)      384       ['convnext_tiny_stage_1_block_\n"," k_0_layernorm (LayerNormal                                         0_depthwise_conv[0][0]']      \n"," ization)                                                                                         \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 768)      148224    ['convnext_tiny_stage_1_block_\n"," k_0_pointwise_conv_1 (Dens                                         0_layernorm[0][0]']           \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 768)      0         ['convnext_tiny_stage_1_block_\n"," k_0_gelu (Activation)                                              0_pointwise_conv_1[0][0]']    \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 192)      147648    ['convnext_tiny_stage_1_block_\n"," k_0_pointwise_conv_2 (Dens                                         0_gelu[0][0]']                \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 192)      192       ['convnext_tiny_stage_1_block_\n"," k_0_layer_scale (LayerScal                                         0_pointwise_conv_2[0][0]']    \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 192)      0         ['convnext_tiny_stage_1_block_\n"," k_0_identity (Activation)                                          0_layer_scale[0][0]']         \n","                                                                                                  \n"," tf.__operators__.add_3 (TF  (None, None, None, 192)      0         ['convnext_tiny_downsampling_b\n"," OpLambda)                                                          lock_0[0][0]',                \n","                                                                     'convnext_tiny_stage_1_block_\n","                                                                    0_identity[0][0]']            \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 192)      9600      ['tf.__operators__.add_3[0][0]\n"," k_1_depthwise_conv (Conv2D                                         ']                            \n"," )                                                                                                \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 192)      384       ['convnext_tiny_stage_1_block_\n"," k_1_layernorm (LayerNormal                                         1_depthwise_conv[0][0]']      \n"," ization)                                                                                         \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 768)      148224    ['convnext_tiny_stage_1_block_\n"," k_1_pointwise_conv_1 (Dens                                         1_layernorm[0][0]']           \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 768)      0         ['convnext_tiny_stage_1_block_\n"," k_1_gelu (Activation)                                              1_pointwise_conv_1[0][0]']    \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 192)      147648    ['convnext_tiny_stage_1_block_\n"," k_1_pointwise_conv_2 (Dens                                         1_gelu[0][0]']                \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 192)      192       ['convnext_tiny_stage_1_block_\n"," k_1_layer_scale (LayerScal                                         1_pointwise_conv_2[0][0]']    \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 192)      0         ['convnext_tiny_stage_1_block_\n"," k_1_identity (Activation)                                          1_layer_scale[0][0]']         \n","                                                                                                  \n"," tf.__operators__.add_4 (TF  (None, None, None, 192)      0         ['tf.__operators__.add_3[0][0]\n"," OpLambda)                                                          ',                            \n","                                                                     'convnext_tiny_stage_1_block_\n","                                                                    1_identity[0][0]']            \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 192)      9600      ['tf.__operators__.add_4[0][0]\n"," k_2_depthwise_conv (Conv2D                                         ']                            \n"," )                                                                                                \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 192)      384       ['convnext_tiny_stage_1_block_\n"," k_2_layernorm (LayerNormal                                         2_depthwise_conv[0][0]']      \n"," ization)                                                                                         \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 768)      148224    ['convnext_tiny_stage_1_block_\n"," k_2_pointwise_conv_1 (Dens                                         2_layernorm[0][0]']           \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 768)      0         ['convnext_tiny_stage_1_block_\n"," k_2_gelu (Activation)                                              2_pointwise_conv_1[0][0]']    \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 192)      147648    ['convnext_tiny_stage_1_block_\n"," k_2_pointwise_conv_2 (Dens                                         2_gelu[0][0]']                \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 192)      192       ['convnext_tiny_stage_1_block_\n"," k_2_layer_scale (LayerScal                                         2_pointwise_conv_2[0][0]']    \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_1_bloc  (None, None, None, 192)      0         ['convnext_tiny_stage_1_block_\n"," k_2_identity (Activation)                                          2_layer_scale[0][0]']         \n","                                                                                                  \n"," tf.__operators__.add_5 (TF  (None, None, None, 192)      0         ['tf.__operators__.add_4[0][0]\n"," OpLambda)                                                          ',                            \n","                                                                     'convnext_tiny_stage_1_block_\n","                                                                    2_identity[0][0]']            \n","                                                                                                  \n"," convnext_tiny_downsampling  (None, None, None, 384)      295680    ['tf.__operators__.add_5[0][0]\n"," _block_1 (Sequential)                                              ']                            \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      19200     ['convnext_tiny_downsampling_b\n"," k_0_depthwise_conv (Conv2D                                         lock_1[0][0]']                \n"," )                                                                                                \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      768       ['convnext_tiny_stage_2_block_\n"," k_0_layernorm (LayerNormal                                         0_depthwise_conv[0][0]']      \n"," ization)                                                                                         \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 1536)     591360    ['convnext_tiny_stage_2_block_\n"," k_0_pointwise_conv_1 (Dens                                         0_layernorm[0][0]']           \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 1536)     0         ['convnext_tiny_stage_2_block_\n"," k_0_gelu (Activation)                                              0_pointwise_conv_1[0][0]']    \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      590208    ['convnext_tiny_stage_2_block_\n"," k_0_pointwise_conv_2 (Dens                                         0_gelu[0][0]']                \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      384       ['convnext_tiny_stage_2_block_\n"," k_0_layer_scale (LayerScal                                         0_pointwise_conv_2[0][0]']    \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      0         ['convnext_tiny_stage_2_block_\n"," k_0_identity (Activation)                                          0_layer_scale[0][0]']         \n","                                                                                                  \n"," tf.__operators__.add_6 (TF  (None, None, None, 384)      0         ['convnext_tiny_downsampling_b\n"," OpLambda)                                                          lock_1[0][0]',                \n","                                                                     'convnext_tiny_stage_2_block_\n","                                                                    0_identity[0][0]']            \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      19200     ['tf.__operators__.add_6[0][0]\n"," k_1_depthwise_conv (Conv2D                                         ']                            \n"," )                                                                                                \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      768       ['convnext_tiny_stage_2_block_\n"," k_1_layernorm (LayerNormal                                         1_depthwise_conv[0][0]']      \n"," ization)                                                                                         \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 1536)     591360    ['convnext_tiny_stage_2_block_\n"," k_1_pointwise_conv_1 (Dens                                         1_layernorm[0][0]']           \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 1536)     0         ['convnext_tiny_stage_2_block_\n"," k_1_gelu (Activation)                                              1_pointwise_conv_1[0][0]']    \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      590208    ['convnext_tiny_stage_2_block_\n"," k_1_pointwise_conv_2 (Dens                                         1_gelu[0][0]']                \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      384       ['convnext_tiny_stage_2_block_\n"," k_1_layer_scale (LayerScal                                         1_pointwise_conv_2[0][0]']    \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      0         ['convnext_tiny_stage_2_block_\n"," k_1_identity (Activation)                                          1_layer_scale[0][0]']         \n","                                                                                                  \n"," tf.__operators__.add_7 (TF  (None, None, None, 384)      0         ['tf.__operators__.add_6[0][0]\n"," OpLambda)                                                          ',                            \n","                                                                     'convnext_tiny_stage_2_block_\n","                                                                    1_identity[0][0]']            \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      19200     ['tf.__operators__.add_7[0][0]\n"," k_2_depthwise_conv (Conv2D                                         ']                            \n"," )                                                                                                \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      768       ['convnext_tiny_stage_2_block_\n"," k_2_layernorm (LayerNormal                                         2_depthwise_conv[0][0]']      \n"," ization)                                                                                         \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 1536)     591360    ['convnext_tiny_stage_2_block_\n"," k_2_pointwise_conv_1 (Dens                                         2_layernorm[0][0]']           \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 1536)     0         ['convnext_tiny_stage_2_block_\n"," k_2_gelu (Activation)                                              2_pointwise_conv_1[0][0]']    \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      590208    ['convnext_tiny_stage_2_block_\n"," k_2_pointwise_conv_2 (Dens                                         2_gelu[0][0]']                \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      384       ['convnext_tiny_stage_2_block_\n"," k_2_layer_scale (LayerScal                                         2_pointwise_conv_2[0][0]']    \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      0         ['convnext_tiny_stage_2_block_\n"," k_2_identity (Activation)                                          2_layer_scale[0][0]']         \n","                                                                                                  \n"," tf.__operators__.add_8 (TF  (None, None, None, 384)      0         ['tf.__operators__.add_7[0][0]\n"," OpLambda)                                                          ',                            \n","                                                                     'convnext_tiny_stage_2_block_\n","                                                                    2_identity[0][0]']            \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      19200     ['tf.__operators__.add_8[0][0]\n"," k_3_depthwise_conv (Conv2D                                         ']                            \n"," )                                                                                                \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      768       ['convnext_tiny_stage_2_block_\n"," k_3_layernorm (LayerNormal                                         3_depthwise_conv[0][0]']      \n"," ization)                                                                                         \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 1536)     591360    ['convnext_tiny_stage_2_block_\n"," k_3_pointwise_conv_1 (Dens                                         3_layernorm[0][0]']           \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 1536)     0         ['convnext_tiny_stage_2_block_\n"," k_3_gelu (Activation)                                              3_pointwise_conv_1[0][0]']    \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      590208    ['convnext_tiny_stage_2_block_\n"," k_3_pointwise_conv_2 (Dens                                         3_gelu[0][0]']                \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      384       ['convnext_tiny_stage_2_block_\n"," k_3_layer_scale (LayerScal                                         3_pointwise_conv_2[0][0]']    \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      0         ['convnext_tiny_stage_2_block_\n"," k_3_identity (Activation)                                          3_layer_scale[0][0]']         \n","                                                                                                  \n"," tf.__operators__.add_9 (TF  (None, None, None, 384)      0         ['tf.__operators__.add_8[0][0]\n"," OpLambda)                                                          ',                            \n","                                                                     'convnext_tiny_stage_2_block_\n","                                                                    3_identity[0][0]']            \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      19200     ['tf.__operators__.add_9[0][0]\n"," k_4_depthwise_conv (Conv2D                                         ']                            \n"," )                                                                                                \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      768       ['convnext_tiny_stage_2_block_\n"," k_4_layernorm (LayerNormal                                         4_depthwise_conv[0][0]']      \n"," ization)                                                                                         \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 1536)     591360    ['convnext_tiny_stage_2_block_\n"," k_4_pointwise_conv_1 (Dens                                         4_layernorm[0][0]']           \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 1536)     0         ['convnext_tiny_stage_2_block_\n"," k_4_gelu (Activation)                                              4_pointwise_conv_1[0][0]']    \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      590208    ['convnext_tiny_stage_2_block_\n"," k_4_pointwise_conv_2 (Dens                                         4_gelu[0][0]']                \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      384       ['convnext_tiny_stage_2_block_\n"," k_4_layer_scale (LayerScal                                         4_pointwise_conv_2[0][0]']    \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      0         ['convnext_tiny_stage_2_block_\n"," k_4_identity (Activation)                                          4_layer_scale[0][0]']         \n","                                                                                                  \n"," tf.__operators__.add_10 (T  (None, None, None, 384)      0         ['tf.__operators__.add_9[0][0]\n"," FOpLambda)                                                         ',                            \n","                                                                     'convnext_tiny_stage_2_block_\n","                                                                    4_identity[0][0]']            \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      19200     ['tf.__operators__.add_10[0][0\n"," k_5_depthwise_conv (Conv2D                                         ]']                           \n"," )                                                                                                \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      768       ['convnext_tiny_stage_2_block_\n"," k_5_layernorm (LayerNormal                                         5_depthwise_conv[0][0]']      \n"," ization)                                                                                         \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 1536)     591360    ['convnext_tiny_stage_2_block_\n"," k_5_pointwise_conv_1 (Dens                                         5_layernorm[0][0]']           \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 1536)     0         ['convnext_tiny_stage_2_block_\n"," k_5_gelu (Activation)                                              5_pointwise_conv_1[0][0]']    \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      590208    ['convnext_tiny_stage_2_block_\n"," k_5_pointwise_conv_2 (Dens                                         5_gelu[0][0]']                \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      384       ['convnext_tiny_stage_2_block_\n"," k_5_layer_scale (LayerScal                                         5_pointwise_conv_2[0][0]']    \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      0         ['convnext_tiny_stage_2_block_\n"," k_5_identity (Activation)                                          5_layer_scale[0][0]']         \n","                                                                                                  \n"," tf.__operators__.add_11 (T  (None, None, None, 384)      0         ['tf.__operators__.add_10[0][0\n"," FOpLambda)                                                         ]',                           \n","                                                                     'convnext_tiny_stage_2_block_\n","                                                                    5_identity[0][0]']            \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      19200     ['tf.__operators__.add_11[0][0\n"," k_6_depthwise_conv (Conv2D                                         ]']                           \n"," )                                                                                                \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      768       ['convnext_tiny_stage_2_block_\n"," k_6_layernorm (LayerNormal                                         6_depthwise_conv[0][0]']      \n"," ization)                                                                                         \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 1536)     591360    ['convnext_tiny_stage_2_block_\n"," k_6_pointwise_conv_1 (Dens                                         6_layernorm[0][0]']           \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 1536)     0         ['convnext_tiny_stage_2_block_\n"," k_6_gelu (Activation)                                              6_pointwise_conv_1[0][0]']    \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      590208    ['convnext_tiny_stage_2_block_\n"," k_6_pointwise_conv_2 (Dens                                         6_gelu[0][0]']                \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      384       ['convnext_tiny_stage_2_block_\n"," k_6_layer_scale (LayerScal                                         6_pointwise_conv_2[0][0]']    \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      0         ['convnext_tiny_stage_2_block_\n"," k_6_identity (Activation)                                          6_layer_scale[0][0]']         \n","                                                                                                  \n"," tf.__operators__.add_12 (T  (None, None, None, 384)      0         ['tf.__operators__.add_11[0][0\n"," FOpLambda)                                                         ]',                           \n","                                                                     'convnext_tiny_stage_2_block_\n","                                                                    6_identity[0][0]']            \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      19200     ['tf.__operators__.add_12[0][0\n"," k_7_depthwise_conv (Conv2D                                         ]']                           \n"," )                                                                                                \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      768       ['convnext_tiny_stage_2_block_\n"," k_7_layernorm (LayerNormal                                         7_depthwise_conv[0][0]']      \n"," ization)                                                                                         \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 1536)     591360    ['convnext_tiny_stage_2_block_\n"," k_7_pointwise_conv_1 (Dens                                         7_layernorm[0][0]']           \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 1536)     0         ['convnext_tiny_stage_2_block_\n"," k_7_gelu (Activation)                                              7_pointwise_conv_1[0][0]']    \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      590208    ['convnext_tiny_stage_2_block_\n"," k_7_pointwise_conv_2 (Dens                                         7_gelu[0][0]']                \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      384       ['convnext_tiny_stage_2_block_\n"," k_7_layer_scale (LayerScal                                         7_pointwise_conv_2[0][0]']    \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      0         ['convnext_tiny_stage_2_block_\n"," k_7_identity (Activation)                                          7_layer_scale[0][0]']         \n","                                                                                                  \n"," tf.__operators__.add_13 (T  (None, None, None, 384)      0         ['tf.__operators__.add_12[0][0\n"," FOpLambda)                                                         ]',                           \n","                                                                     'convnext_tiny_stage_2_block_\n","                                                                    7_identity[0][0]']            \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      19200     ['tf.__operators__.add_13[0][0\n"," k_8_depthwise_conv (Conv2D                                         ]']                           \n"," )                                                                                                \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      768       ['convnext_tiny_stage_2_block_\n"," k_8_layernorm (LayerNormal                                         8_depthwise_conv[0][0]']      \n"," ization)                                                                                         \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 1536)     591360    ['convnext_tiny_stage_2_block_\n"," k_8_pointwise_conv_1 (Dens                                         8_layernorm[0][0]']           \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 1536)     0         ['convnext_tiny_stage_2_block_\n"," k_8_gelu (Activation)                                              8_pointwise_conv_1[0][0]']    \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      590208    ['convnext_tiny_stage_2_block_\n"," k_8_pointwise_conv_2 (Dens                                         8_gelu[0][0]']                \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      384       ['convnext_tiny_stage_2_block_\n"," k_8_layer_scale (LayerScal                                         8_pointwise_conv_2[0][0]']    \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_2_bloc  (None, None, None, 384)      0         ['convnext_tiny_stage_2_block_\n"," k_8_identity (Activation)                                          8_layer_scale[0][0]']         \n","                                                                                                  \n"," tf.__operators__.add_14 (T  (None, None, None, 384)      0         ['tf.__operators__.add_13[0][0\n"," FOpLambda)                                                         ]',                           \n","                                                                     'convnext_tiny_stage_2_block_\n","                                                                    8_identity[0][0]']            \n","                                                                                                  \n"," convnext_tiny_downsampling  (None, None, None, 768)      1181184   ['tf.__operators__.add_14[0][0\n"," _block_2 (Sequential)                                              ]']                           \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 768)      38400     ['convnext_tiny_downsampling_b\n"," k_0_depthwise_conv (Conv2D                                         lock_2[0][0]']                \n"," )                                                                                                \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 768)      1536      ['convnext_tiny_stage_3_block_\n"," k_0_layernorm (LayerNormal                                         0_depthwise_conv[0][0]']      \n"," ization)                                                                                         \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 3072)     2362368   ['convnext_tiny_stage_3_block_\n"," k_0_pointwise_conv_1 (Dens                                         0_layernorm[0][0]']           \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 3072)     0         ['convnext_tiny_stage_3_block_\n"," k_0_gelu (Activation)                                              0_pointwise_conv_1[0][0]']    \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 768)      2360064   ['convnext_tiny_stage_3_block_\n"," k_0_pointwise_conv_2 (Dens                                         0_gelu[0][0]']                \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 768)      768       ['convnext_tiny_stage_3_block_\n"," k_0_layer_scale (LayerScal                                         0_pointwise_conv_2[0][0]']    \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 768)      0         ['convnext_tiny_stage_3_block_\n"," k_0_identity (Activation)                                          0_layer_scale[0][0]']         \n","                                                                                                  \n"," tf.__operators__.add_15 (T  (None, None, None, 768)      0         ['convnext_tiny_downsampling_b\n"," FOpLambda)                                                         lock_2[0][0]',                \n","                                                                     'convnext_tiny_stage_3_block_\n","                                                                    0_identity[0][0]']            \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 768)      38400     ['tf.__operators__.add_15[0][0\n"," k_1_depthwise_conv (Conv2D                                         ]']                           \n"," )                                                                                                \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 768)      1536      ['convnext_tiny_stage_3_block_\n"," k_1_layernorm (LayerNormal                                         1_depthwise_conv[0][0]']      \n"," ization)                                                                                         \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 3072)     2362368   ['convnext_tiny_stage_3_block_\n"," k_1_pointwise_conv_1 (Dens                                         1_layernorm[0][0]']           \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 3072)     0         ['convnext_tiny_stage_3_block_\n"," k_1_gelu (Activation)                                              1_pointwise_conv_1[0][0]']    \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 768)      2360064   ['convnext_tiny_stage_3_block_\n"," k_1_pointwise_conv_2 (Dens                                         1_gelu[0][0]']                \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 768)      768       ['convnext_tiny_stage_3_block_\n"," k_1_layer_scale (LayerScal                                         1_pointwise_conv_2[0][0]']    \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 768)      0         ['convnext_tiny_stage_3_block_\n"," k_1_identity (Activation)                                          1_layer_scale[0][0]']         \n","                                                                                                  \n"," tf.__operators__.add_16 (T  (None, None, None, 768)      0         ['tf.__operators__.add_15[0][0\n"," FOpLambda)                                                         ]',                           \n","                                                                     'convnext_tiny_stage_3_block_\n","                                                                    1_identity[0][0]']            \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 768)      38400     ['tf.__operators__.add_16[0][0\n"," k_2_depthwise_conv (Conv2D                                         ]']                           \n"," )                                                                                                \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 768)      1536      ['convnext_tiny_stage_3_block_\n"," k_2_layernorm (LayerNormal                                         2_depthwise_conv[0][0]']      \n"," ization)                                                                                         \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 3072)     2362368   ['convnext_tiny_stage_3_block_\n"," k_2_pointwise_conv_1 (Dens                                         2_layernorm[0][0]']           \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 3072)     0         ['convnext_tiny_stage_3_block_\n"," k_2_gelu (Activation)                                              2_pointwise_conv_1[0][0]']    \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 768)      2360064   ['convnext_tiny_stage_3_block_\n"," k_2_pointwise_conv_2 (Dens                                         2_gelu[0][0]']                \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 768)      768       ['convnext_tiny_stage_3_block_\n"," k_2_layer_scale (LayerScal                                         2_pointwise_conv_2[0][0]']    \n"," e)                                                                                               \n","                                                                                                  \n"," convnext_tiny_stage_3_bloc  (None, None, None, 768)      0         ['convnext_tiny_stage_3_block_\n"," k_2_identity (Activation)                                          2_layer_scale[0][0]']         \n","                                                                                                  \n"," tf.__operators__.add_17 (T  (None, None, None, 768)      0         ['tf.__operators__.add_16[0][0\n"," FOpLambda)                                                         ]',                           \n","                                                                     'convnext_tiny_stage_3_block_\n","                                                                    2_identity[0][0]']            \n","                                                                                                  \n"," layer_normalization (Layer  (None, None, None, 768)      1536      ['tf.__operators__.add_17[0][0\n"," Normalization)                                                     ]']                           \n","                                                                                                  \n"," global_average_pooling2d (  (None, 768)                  0         ['layer_normalization[0][0]'] \n"," GlobalAveragePooling2D)                                                                          \n","                                                                                                  \n"," dropout (Dropout)           (None, 768)                  0         ['global_average_pooling2d[0][\n","                                                                    0]']                          \n","                                                                                                  \n"," dense (Dense)               (None, 4)                    3076      ['dropout[0][0]']             \n","                                                                                                  \n","==================================================================================================\n","Total params: 27823204 (106.14 MB)\n","Trainable params: 27823204 (106.14 MB)\n","Non-trainable params: 0 (0.00 Byte)\n","__________________________________________________________________________________________________\n"]}]},{"cell_type":"code","source":["len(model3_FT.layers)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PHbLUz-Au7eL","executionInfo":{"status":"ok","timestamp":1703772874885,"user_tz":-330,"elapsed":29,"user":{"displayName":"Tarun Kumar Reddy","userId":"06186965699569836560"}},"outputId":"8b2c9d2e-efe1-4ec2-a191-56e8a934d8e9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["154"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["for layer in model3_FT.layers:\n","  layer.trainable = True"],"metadata":{"id":"X2sgFjSYqOhI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model3_FT.compile(loss='sparse_categorical_crossentropy',\n","                 optimizer='adam',\n","                 metrics=['accuracy'])\n","\n","callbacks_FT = [\n","             keras.callbacks.ModelCheckpoint(\"model3FT.h5\",\n","                                             monitor='val_accuracy',\n","                                             save_weights_only=True,\n","                                             save_best_only=True)]\n","\n","history_TL = model3_FT.fit(x = X_train_std, y = y_train, epochs=20,\n","                          validation_split=0.1, batch_size=32, callbacks=callbacks_FT)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"co-QDkp5qZDv","outputId":"6577dfab-ffb1-4c0c-e7b6-55b0f189e856","executionInfo":{"status":"ok","timestamp":1703773215975,"user_tz":-330,"elapsed":341103,"user":{"displayName":"Tarun Kumar Reddy","userId":"06186965699569836560"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/20\n","11/11 [==============================] - 68s 2s/step - loss: 1.9132 - accuracy: 0.3059 - val_loss: 1.4170 - val_accuracy: 0.2368\n","Epoch 2/20\n","11/11 [==============================] - 13s 1s/step - loss: 1.5345 - accuracy: 0.2735 - val_loss: 1.5577 - val_accuracy: 0.3158\n","Epoch 3/20\n","11/11 [==============================] - 12s 1s/step - loss: 1.5133 - accuracy: 0.2971 - val_loss: 1.4246 - val_accuracy: 0.3158\n","Epoch 4/20\n","11/11 [==============================] - 12s 1s/step - loss: 1.4828 - accuracy: 0.3088 - val_loss: 1.3999 - val_accuracy: 0.3158\n","Epoch 5/20\n","11/11 [==============================] - 12s 1s/step - loss: 1.4947 - accuracy: 0.2824 - val_loss: 1.5288 - val_accuracy: 0.3158\n","Epoch 6/20\n","11/11 [==============================] - 13s 1s/step - loss: 1.4710 - accuracy: 0.3059 - val_loss: 1.4049 - val_accuracy: 0.3158\n","Epoch 7/20\n","11/11 [==============================] - 13s 1s/step - loss: 1.4538 - accuracy: 0.3176 - val_loss: 1.4646 - val_accuracy: 0.3158\n","Epoch 8/20\n","11/11 [==============================] - 13s 1s/step - loss: 1.5046 - accuracy: 0.2529 - val_loss: 1.4556 - val_accuracy: 0.3158\n","Epoch 9/20\n","11/11 [==============================] - 13s 1s/step - loss: 1.4231 - accuracy: 0.3000 - val_loss: 1.3725 - val_accuracy: 0.3158\n","Epoch 10/20\n","11/11 [==============================] - 12s 1s/step - loss: 1.4368 - accuracy: 0.3294 - val_loss: 1.4171 - val_accuracy: 0.3158\n","Epoch 11/20\n","11/11 [==============================] - 12s 1s/step - loss: 1.3961 - accuracy: 0.3412 - val_loss: 1.3649 - val_accuracy: 0.3158\n","Epoch 12/20\n","11/11 [==============================] - 13s 1s/step - loss: 1.3813 - accuracy: 0.3529 - val_loss: 1.4496 - val_accuracy: 0.3158\n","Epoch 13/20\n","11/11 [==============================] - 13s 1s/step - loss: 1.3797 - accuracy: 0.3500 - val_loss: 1.4209 - val_accuracy: 0.2895\n","Epoch 14/20\n","11/11 [==============================] - 13s 1s/step - loss: 1.3898 - accuracy: 0.3088 - val_loss: 1.3825 - val_accuracy: 0.3158\n","Epoch 15/20\n","11/11 [==============================] - 13s 1s/step - loss: 1.3848 - accuracy: 0.3735 - val_loss: 1.4044 - val_accuracy: 0.3158\n","Epoch 16/20\n","11/11 [==============================] - 13s 1s/step - loss: 1.4030 - accuracy: 0.3118 - val_loss: 1.3918 - val_accuracy: 0.3158\n","Epoch 17/20\n","11/11 [==============================] - 13s 1s/step - loss: 1.3959 - accuracy: 0.3147 - val_loss: 1.4261 - val_accuracy: 0.3158\n","Epoch 18/20\n","11/11 [==============================] - 13s 1s/step - loss: 1.3828 - accuracy: 0.3471 - val_loss: 1.3678 - val_accuracy: 0.3158\n","Epoch 19/20\n","11/11 [==============================] - 13s 1s/step - loss: 1.3867 - accuracy: 0.3088 - val_loss: 1.4073 - val_accuracy: 0.3158\n","Epoch 20/20\n","11/11 [==============================] - 12s 1s/step - loss: 1.3798 - accuracy: 0.3588 - val_loss: 1.4101 - val_accuracy: 0.3158\n"]}]},{"cell_type":"code","source":["keys = ['accuracy', 'val_accuracy']\n","progress = {k:v for k,v in history_TL.history.items() if k in keys}\n","\n","import pandas as pd\n","pd.DataFrame(progress).plot()\n","\n","plt.xlabel(\"epochs\")\n","plt.ylabel(\"accuracy\")\n","\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":454},"id":"nRn8k1t7qgMv","executionInfo":{"status":"ok","timestamp":1703773215979,"user_tz":-330,"elapsed":20,"user":{"displayName":"Tarun Kumar Reddy","userId":"06186965699569836560"}},"outputId":"5b340a50-d7d8-4b9d-cd77-43ce3b0a5423"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["model3_FT.load_weights(\"model3FT.h5\")\n","testLoss_model12 , testAccuracy_model12 = model3_FT.evaluate(x = X_test_std, y = y_test)\n","print(\"Test-loss: %f, Test-accuracy: %f\" % (testLoss_model12, testAccuracy_model12))"],"metadata":{"id":"eRIsRHTlrCbH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1703773221941,"user_tz":-330,"elapsed":5977,"user":{"displayName":"Tarun Kumar Reddy","userId":"06186965699569836560"}},"outputId":"c2d05dc5-e87e-48f8-80f4-5a0ff6a9fcd8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["4/4 [==============================] - 5s 1s/step - loss: 1.4386 - accuracy: 0.3701\n","Test-loss: 1.438596, Test-accuracy: 0.370079\n"]}]},{"cell_type":"code","source":["cProba = model3_FT.predict(X_test_std[:1])\n","print(cProba)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cfaIC9UP9vj2","executionInfo":{"status":"ok","timestamp":1703773225385,"user_tz":-330,"elapsed":3459,"user":{"displayName":"Tarun Kumar Reddy","userId":"06186965699569836560"}},"outputId":"cfd899f3-e2b9-45bd-e1f1-1484bb962714"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 3s 3s/step\n","[[0.2951242  0.11920115 0.11566929 0.47000542]]\n"]}]},{"cell_type":"code","source":["y_test[1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1wfpVZ1p-XW3","executionInfo":{"status":"ok","timestamp":1703773225386,"user_tz":-330,"elapsed":28,"user":{"displayName":"Tarun Kumar Reddy","userId":"06186965699569836560"}},"outputId":"bafe029a-8b77-4ae2-f022-7eeb0e612fd9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["np.argmax(cProba)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b-apUE1N0Ojc","executionInfo":{"status":"ok","timestamp":1703773225386,"user_tz":-330,"elapsed":21,"user":{"displayName":"Tarun Kumar Reddy","userId":"06186965699569836560"}},"outputId":"6fb91111-8c82-4559-d197-9b894f26b39d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["model3_FT.save(\"/content/drive/MyDrive/Deep_Learning_Final_Project/model3_FT.h5\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6Wh2E0AlxTRG","executionInfo":{"status":"ok","timestamp":1703773227357,"user_tz":-330,"elapsed":1989,"user":{"displayName":"Tarun Kumar Reddy","userId":"06186965699569836560"}},"outputId":"84e3b793-d545-484e-f828-f86df44a8bb3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py:3103: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.\n","  saving_api.save_model(\n"]}]},{"cell_type":"code","source":["# Load the saved best model\n","from keras import layers\n","\n","class LayerScale(layers.Layer):\n","    def __init__(self, init_values, projection_dim, **kwargs):\n","        super().__init__(**kwargs)\n","        self.init_values = init_values\n","        self.projection_dim = projection_dim\n","\n","    def build(self, input_shape):\n","        self.gamma = tf.Variable(\n","            self.init_values * tf.ones((self.projection_dim,))\n","        )\n","\n","    def call(self, x):\n","        return x * self.gamma\n","\n","    def get_config(self):\n","        config = super().get_config()\n","        config.update(\n","            {\n","                \"init_values\": self.init_values,\n","                \"projection_dim\": self.projection_dim,\n","            }\n","        )\n","        return config\n","\n","model3_FT = keras.models.load_model(\"/content/drive/MyDrive/Deep_Learning_Final_Project/model3_FT.h5\", custom_objects={\"LayerScale\": LayerScale} )\n"],"metadata":{"id":"fNgxSljcQSAZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn import metrics\n","predicted = model3_FT.predict(X_test_std)\n","predicted_class = np.argmax(predicted, axis=1)\n","\n","print(\"Classification report for classifier %s:\\n%s\\n\"\n","% (model3_FT, metrics.classification_report(y_test, predicted_class)))\n","from sklearn.metrics import confusion_matrix\n","from sklearn.metrics import ConfusionMatrixDisplay\n","confMatrix = confusion_matrix(y_true = y_test, y_pred = predicted_class)\n","disp = ConfusionMatrixDisplay(confusion_matrix = confMatrix)\n","disp.plot()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":816},"id":"8S9QIJXfQjwP","executionInfo":{"status":"ok","timestamp":1703783996704,"user_tz":-330,"elapsed":24040,"user":{"displayName":"Tarun Kumar Reddy","userId":"06186965699569836560"}},"outputId":"edb5ca49-8d60-40ab-bd1d-3d1153ec4168"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["4/4 [==============================] - 14s 1s/step\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"stream","name":"stdout","text":["Classification report for classifier <keras.src.engine.functional.Functional object at 0x792c9ce68490>:\n","              precision    recall  f1-score   support\n","\n","           0       0.00      0.00      0.00        26\n","           1       0.00      0.00      0.00        33\n","           2       0.00      0.00      0.00        21\n","           3       0.37      1.00      0.54        47\n","\n","    accuracy                           0.37       127\n","   macro avg       0.09      0.25      0.14       127\n","weighted avg       0.14      0.37      0.20       127\n","\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]}]}